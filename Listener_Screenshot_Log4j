ScreenShot in TestNG Selenium combined with Listener Class 

 

******* TestBase Class ******** 

TestBase class defines the screenshot method. TakeScreenshot is the class imported for this use. Then this screenshot file is copied into a jpg file type in the required directory.  

In the listener class which implements the ItestListeners, use the results object to get values about the test method.  

 

package com.kaushik.selenium.capabilities; 

 

import java.io.File; 

import java.io.IOException; 

 

import org.apache.commons.io.FileUtils; 

import org.openqa.selenium.OutputType; 

import org.openqa.selenium.TakesScreenshot; 

import org.openqa.selenium.WebDriver; 

import org.openqa.selenium.chrome.ChromeDriver; 

 

public class TestBase { 

 

public static WebDriver driver; 

 

public void initialize() { 

 

System.setProperty("webdriver.chrome.driver", System.getProperty("user.dir") + "/chromedriver"); 

   

   

  driver = new ChromeDriver(); 

  driver.manage().window().maximize(); 

  driver.navigate().to("http://demo.guru99.com/test/newtours/register.php"); 

} 

 

 

public void failure(){ 

 

File fs = ((TakesScreenshot)driver).getScreenshotAs(OutputType.FILE); 

try { 

FileUtils.copyFile(fs, new File("/Users/kaushikmajumder/git/kaushikuserrepo/L001A/test-output/Screenshot/testfail.jpg")); 

} catch (IOException e) { 

// TODO Auto-generated catch block 

e.printStackTrace(); 

} 

 

 

 

} 

 

} 

 

****** Listener Class ********  

In this this, we call the screen shot method from the Test Base. The call can be done based on which condition we want to take the screen shot. In this case, screenshot is taken in the case of failed test case. 

 

package com.kaushik.selenium.capabilities; 

 

import org.apache.log4j.Logger; 

import org.openqa.selenium.logging.Logs; 

import org.testng.ITestContext; 

import org.testng.ITestListener; 

import org.testng.ITestResult; 

 

public class ListenerClass extends TestBase implements ITestListener{ 

 

 

Logger logs = Logger.getLogger(ListenerClass.class); 

 

 

public void onTestStart(ITestResult result) { 

// TODO Auto-generated method stub 

 

} 

 

public void onTestSuccess(ITestResult result) { 

// TODO Auto-generated method stub 

 

} 

 

public void onTestFailure(ITestResult result) { 

result.getMethod();  

logs.debug("Test Case Failed: Take screen Shot");   

 failure(); 

} 

 

public void onTestSkipped(ITestResult result) { 

// TODO Auto-generated method stub 

 

} 

 

public void onTestFailedButWithinSuccessPercentage(ITestResult result) { 

// TODO Auto-generated method stub 

 

} 

 

public void onStart(ITestContext context) { 

// TODO Auto-generated method stub 

 

} 

 

public void onFinish(ITestContext context) { 

// TODO Auto-generated method stub 

 

} 

 

} 

 

******* TestExecution Class ***** 

 

Nothing specific to add in the Test Class, just add the listener annotation and call the listener class. The listener will know when the test case fails and the screen shot method will be called.  

 

package com.kaushik.selenium.capabilities; 

 

import org.apache.log4j.Logger; 

import org.openqa.selenium.By; 

import org.openqa.selenium.WebDriver; 

import org.openqa.selenium.WebElement; 

import org.openqa.selenium.chrome.ChromeDriver; 

import org.openqa.selenium.chrome.ChromeOptions; 

import org.openqa.selenium.support.ui.Select; 

import org.testng.annotations.AfterMethod; 

import org.testng.annotations.BeforeMethod; 

import org.testng.annotations.Listeners; 

import org.testng.annotations.Test; 

 

 

import junit.framework.Assert; 

 

@Listeners(ListenerClass.class) 

 

public class HeadLessBrowserTest extends TestBase{ 

 

Logger logs = Logger.getLogger(HeadLessBrowserTest.class); 

 

 

@BeforeMethod 

 

public void openBrowser() { 

System.out.println("Setup @ Beforemethod");  

initialize();   

} 

 

@Test 

public void selectCountry() { 

…. 

….. 

…. 

 

 

 

 

 

Logger using Log4j in TestNG Selenium 

 

****** log4j.properties. ******  

created in src/main/resources folder always 

 

#Set level 

log4j.rootCategory=debug, console, file   

   

# Appender which writes to console   

log4j.appender.console=org.apache.log4j.ConsoleAppender   

log4j.appender.console.layout=org.apache.log4j.PatternLayout 

log4j.appender.console.layout.ConversionPattern=%d{MM-dd-yyyy HH:mm:ss} %F %-5p [%t] %c{2} %L - %m%n 

   

# Appender which writes to a file   

log4j.appender.file=org.apache.log4j.RollingFileAppender 

log4j.appender.file.File=application.log 

   

# Defining maximum size of a log file 

log4j.appender.file.MaxFileSize=10mb  

log4j.appender.file.MaxBackupIndex=10 

log4j.appender.file.layout=org.apache.log4j.PatternLayout   

log4j.appender.file.layout.ConversionPattern=%d{ISO8601} %5p [%t] %c{1}:%L - %m%n 

log4j.appender.file.Append=false 

 

**** Test Class ******  

Use Logger class to create object and use the object to get log info as required 

 

package com.kaushik.selenium.capabilities; 

 

import org.apache.log4j.Logger; 

import org.openqa.selenium.By; 

import org.openqa.selenium.WebDriver; 

import org.openqa.selenium.WebElement; 

import org.openqa.selenium.chrome.ChromeDriver; 

import org.openqa.selenium.chrome.ChromeOptions; 

import org.openqa.selenium.support.ui.Select; 

import org.testng.annotations.AfterMethod; 

import org.testng.annotations.BeforeMethod; 

import org.testng.annotations.Listeners; 

import org.testng.annotations.Test; 

 

 

import junit.framework.Assert; 

 

@Listeners(ListenerClass.class) 

 

public class HeadLessBrowserTest extends TestBase{ 

 

Logger logs = Logger.getLogger(HeadLessBrowserTest.class); 

 

 

@BeforeMethod 

 

public void openBrowser() { 

System.out.println("Setup @ Beforemethod");  

initialize();   

} 

 

@Test 

public void selectCountry() { 

WebElement DropDownField = driver.findElement(By.xpath("//*[@name ='country']")); 

Select DropDownSelect = new Select(DropDownField); //select value from dropdown 

Boolean DropDownMultiple = DropDownSelect.isMultiple(); //check if dropdown selects multiple selections 

    System.out.println(DropDownMultiple); 

DropDownSelect.selectByValue("INDIA"); 

//DropDownSelect.equals(DropDownField); 

logs.info("India Selected"); 

Assert.assertEquals("India", DropDownSelect.getFirstSelectedOption()); 

} 

 

@AfterMethod 

public void tearDown() throws InterruptedException { 

Thread.sleep(5000); 

driver.quit(); 

} 

 

} 

 

 

  
